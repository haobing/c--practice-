//简单工厂模式,不符合开闭原则，不是23种标准设计模式
#include<iostream>
#include<string.h>
#include<stdlib.h>
using namespace std;

class Fruit
{
public:
	Fruit(){}
	virtual ~Fruit(){}
	virtual void sayName() = 0;
};

class Banana:public Fruit
{
public:
	virtual void sayName()
	{
		cout<<"Banana"<<endl;
	}
};

class Apple:public Fruit
{
public:
	virtual void sayName()
	{
		cout<<"Apple"<<endl;
	}
};

class Factory
{
public:
	Fruit *create(char *p)
	{
		if(strcmp(p,"banana") == 0)
		{
			return new Banana;
		}
		else if(strcmp(p,"apple") == 0)
		{
			return new Apple;
		}
		else
		{
			return NULL;
		}
	}
};

int main()
{
	Factory *fac = new Factory;
	Fruit *banana = fac->create("banana");
	banana->sayName();
	Fruit *apple = fac->create("apple");
	apple->sayName();
	delete apple;
	delete banana;
	delete fac;
}




